#include "scripts\base.inc"
#include "scripts\keys.inc"

// store some of the game's attributes in global variables for convenience
Keyboard = Game.Keyboard;
Scene = Game.Scene;

// load the "caption" window
var win = Game.LoadWindow("interface\system\caption.window");
global WinCaption = win.GetControl("caption");

// load the "verbbar" window
global VerbWindow = Game.LoadWindow("interface/verbbar/verbbar.window");
VerbWindow.Visible = true;

Game.SelectedVerb = "Ir a";

global MenuObject = null;


// run the "game loop" script
Game.AttachScript("scripts\game_loop.script");

// which scene to load?
Game.ChangeScene(Game.StartupScene);

// load our main actor
actor = Game.LoadActor("actors\marcelo\marcelo.actor");
Game.MainObject = actor;

////////////////////////////////////////////////////////////////////////////////
on "LeftClick"
{
  // what did we click?
  var ActObj = Game.ActiveObject;
  if(ActObj!=null)
  {
    // clicking an inventory item
    if(ActObj.Type=="item" && Game.SelectedItem==null)
    {
      Game.SelectedItem = ActObj;
    }
    // using an inventory item on another object
    else if(Game.SelectedItem != null && Game.SelectedItem!=ActObj)
    {
      var Item = Game.SelectedItem;
	  
      if(ActObj.CanHandleEvent(Item.Name)) ActObj.ApplyEvent(Item.Name);
      else if(Item.CanHandleEvent("Usar")) Item.ApplyEvent("Usar");
      else if(ActObj.CanHandleEvent("Usar")) ActObj.ApplyEvent("Usar");
      else actor.Talk("I can't use these things together.");
    }
    else // item en la pantalla
	{
	   if(Game.SelectedVerb != "Ir a")
	   {
	     if(ActObj.CanHandleEvent(Game.SelectedVerb))
		 {
		   ActObj.ApplyEvent(Game.SelectedVerb);
		 } else {
		   if (Game.SelectedVerb == "Dar") actor.Talk("No deber�a deshacerme de eso");
		   if (Game.SelectedVerb == "Agarrar") actor.Talk("No puedo agarrar eso!");
		   if (Game.SelectedVerb == "Usar") actor.Talk("No puedo usar eso!");
		   if (Game.SelectedVerb == "Abrir") actor.Talk("No puedo abrir eso!");
		   if (Game.SelectedVerb == "Mirar") actor.Talk("Esto es algo com�n, no se que decirte");
		   if (Game.SelectedVerb == "Empujar") actor.Talk("Est� duro. Empujo y nada");
		   if (Game.SelectedVerb == "Cerrar") actor.Talk("No puedo cerrar eso");
		   if (Game.SelectedVerb == "Hablar") actor.Talk("No puedo hablar con un objeto inanimado");
		   if (Game.SelectedVerb == "Tirar") actor.Talk("Est� RE duro. Tiro y tiro.");
		 }
		 Game.SelectedVerb = "Ir a";
	   }
	   else ActObj.ApplyEvent("LeftClick");
	}
  }
  // else propagate the LeftClick event to a scene
  else
  {
    Scene.ApplyEvent("LeftClick");
	Game.SelectedVerb = "Ir a";
  }
}



////////////////////////////////////////////////////////////////////////////////
on "RightClick"
{
  // if inventory item selected? deselect it
  if (Game.SelectedItem != null){
    Game.SelectedItem = null;
    return;
  }

  var ActObj = Game.ActiveObject;

  if(ActObj!=null)
  {
    // if the clicked object can handle any of the "verbs", display the right-click menu
    if(ActObj.CanHandleEvent("Agarrar") || ActObj.CanHandleEvent("Talk") || ActObj.CanHandleEvent("LookAt"))
    {
      // store the clicked object in a global variable MenuObject
      MenuObject = Game.ActiveObject;
	  
	  ActObj.ApplyEvent("Agarrar");

      // stop the actor from whatever he was going to do
      actor.Reset();
    }
    // no verbs supported, no menu is needed; just send the RightClick event to the object
    else ActObj.ApplyEvent("RightClick");
  }
}


////////////////////////////////////////////////////////////////////////////////
on "Keypress"
{
  // on Esc or F1 key
  if(Keyboard.KeyCode==VK_ESCAPE || Keyboard.KeyCode==VK_F1)
  {
    // load and display the main menu window
    WinCaption.Visible = false;
    var WinMainMenu = Game.LoadWindow("interface\system\mainmenu.window");
    WinMainMenu.Center();
    WinMainMenu.GoSystemExclusive();
    Game.UnloadObject(WinMainMenu);
  }
}


////////////////////////////////////////////////////////////////////////////////
on "QuitGame"
{
  // on Alt+F4 (window close)
  // load and display the quit confirmation window
  WinCaption.Visible = false;
  var WinQuit = Game.LoadWindow("interface\system\quit.window");
  WinQuit.Center();
  WinQuit.GoSystemExclusive();

  // and if the user selected Yes
  if(WinQuit.xResult)
  {
    // quit the game
    Game.QuitGame();
  }
  // otherwise just unload the quit window from memory
  else Game.UnloadObject(WinQuit);
}
